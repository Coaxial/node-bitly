{"version":3,"sources":["bitly.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;;iBAEC,GAAG;;;;mBACD,KAAK;;;;uBACD,SAAS;;;;uBAEJ,WAAW;;IAAxB,OAAO;;IAEb,KAAK;;;;;;;;AAOG,WAPR,KAAK,CAOI,WAAW,EAA+C;QAA7C,YAAY,gCAAG,WAAW;QAAE,MAAM,gCAAG,MAAM;;0BAPjE,KAAK;;AASP,QAAI,CAAC,MAAM,GAAI,mBAAmB,CAAC;AACnC,QAAI,CAAC,UAAU,GAAG,IAAI,CAAC;;AAEvB,QAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC/B,QAAI,CAAC,MAAM,GAAG,YAAY,CAAC;;AAE3B,QAAI,CAAC,cAAc,GAAG,IAAI,MAAM,EAAE,CAAC;AACnC,QAAI,CAAC,cAAc,CAAC,OAAO,CAAC,uDAAwD,CAAC,CAAC;;AAEtF,QAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACnC,QAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACnC,QAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;GACtC;;eAtBG,KAAK;;;;;;;;;WA8BQ,0BAAC,KAAK,EAAE,MAAM,EAAE;;AAE/B,aAAO,iBAAI,KAAK,CACd,iBAAI,MAAM,CAAC;AACT,gBAAQ,EAAE,OAAO;AACjB,gBAAQ,EAAE,IAAI,CAAC,MAAM;AACrB,gBAAQ,EAAE,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,MAAM;AAC9C,aAAK,EAAE,KAAK;OACb,CAAC,CACH,CAAC;KACH;;;WAEQ,kBAAC,UAAU,EAAE;AACpB,aAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC7C;;;WAEgB,0BAAC,KAAK,EAAE,KAAK,EAAE;AAC9B,UAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,UAAI,IAAI,GAAG,EAAE,CAAC;AACd,UAAI,CAAC,GAAG,CAAC;UAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;AAC5B,aAAM,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAChB,YAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AAC3B,kBAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACzB,MAAM;AACL,cAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACrB;OACF;AACD,UAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACnD,UAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;KACxC;;;;;;;;;;;WASQ,mBAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;;AAEjC,UAAI,QAAQ,YAAA,CAAC;;AAEb,UAAI,CAAC,QAAQ,EAAE,QAAQ,GAAG,eAAE,KAAK,EAAE,CAAC;;AAEpC,gCACE,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,EACpC,EAAC,IAAI,EAAE,IAAI,CAAC,MAAM,KAAK,MAAM,EAAC,EAC9B,UAAC,KAAK,EAAE,cAAc,EAAE,IAAI,EAAK;AAC/B,YAAI,KAAK,EAAE;AACT,iBAAO,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC5D;;AAED,YAAI,IAAI,CAAC,WAAW,KAAK,GAAG,EAAE;AAC5B,eAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACnC,eAAK,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;;AAE9B,iBAAO,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC3D;;AAED,eAAO,QAAQ,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;OACjE,CAAC,CAAC;AACL,aAAO,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC;KACrC;;;SA5FG,KAAK;;;qBA+FI,KAAK","file":"bitly.js","sourcesContent":["'use strict';\r\n\r\nimport q from 'q';\r\nimport url from 'url'\r\nimport Request from 'request';\r\n\r\nimport * as methods from './methods';\r\n\r\nclass Bitly {\r\n  /**\r\n   * Constructor for the Bitly class\r\n   * @param {string} accessToken Oauth access token\r\n   * @param {string=} customDomain Domain for URL shortening, defaults to bitly.com\r\n   * @param {string=} format Format for the return value, defaults to json\r\n   */\r\n  constructor (accessToken, customDomain = 'bitly.com', format = 'json') {\r\n\r\n    this.apiUrl =  'api-ssl.bitly.com';\r\n    this.apiVersion = 'v3';\r\n\r\n    this.format = format;\r\n    this.accessToken = accessToken;\r\n    this.domain = customDomain;\r\n\r\n    this.urlCheckRegexp = new RegExp();\r\n    this.urlCheckRegexp.compile('^[A-Za-z]+://[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_%&\\\\?\\/.=]+$');\r\n\r\n    this.clicks = methods.clicks(this);\r\n    this.expand = methods.expand(this);\r\n    this.shorten = methods.shorten(this);\r\n  }\r\n\r\n  /**\r\n   * Generates a url for Bitly requests\r\n   * @param query\r\n   * @param method\r\n   * @returns {string}\r\n   */\r\n  generateQueryUrl (query, method) {\r\n\r\n    return url.parse(\r\n      url.format({\r\n        protocol: 'https',\r\n        hostname: this.apiUrl,\r\n        pathname: '/' + this.apiVersion + '/' + method,\r\n        query: query\r\n      })\r\n    );\r\n  }\r\n\r\n  urlCheck (urlToCheck) {\r\n    return this.urlCheckRegexp.test(urlToCheck);\r\n  }\r\n\r\n  sortUrlAndHashes (items, query) {\r\n    let shortUrl = [];\r\n    let hash = [];\r\n    let i = 0, j = items.length;\r\n    for(; i < j; i++) {\r\n      if (this.urlCheck(items[i])) {\r\n        shortUrl.push(items[i]);\r\n      } else {\r\n        hash.push(items[i]);\r\n      }\r\n    }\r\n    if (shortUrl.length > 0) query.shortUrl = shortUrl;\r\n    if (hash.length > 0) query.hash = hash;\r\n  }\r\n\r\n  /**\r\n   * Function to execute the request to the Bitly URl\r\n   * @param query\r\n   * @param method\r\n   * @param callback\r\n   * @returns {*|promise}\r\n   */\r\n  doRequest(query, method, callback) {\r\n\r\n    let deferred;\r\n\r\n    if (!callback) deferred = q.defer();\r\n\r\n    Request(\r\n      this.generateQueryUrl(query, method),\r\n      {json: this.format === 'json'},\r\n      (error, clientResponse, body) => {\r\n        if (error) {\r\n          return callback ? callback(error) : deferred.reject(error);\r\n        }\r\n\r\n        if (body.status_code !== 200) {\r\n          error = new Error(body.status_txt);\r\n          error.code = body.status_code;\r\n\r\n          return callback ? callback(error) : deferred.reject(body);\r\n        }\r\n\r\n        return callback ? callback(null, body) : deferred.resolve(body);\r\n      });\r\n    return deferred && deferred.promise;\r\n  }\r\n}\r\n\r\nexport default Bitly;"],"sourceRoot":"D:\\Documents\\GitHub\\node-bitly\\lib"}